/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RedirectImport } from './routes/redirect'
import { Route as LoginImport } from './routes/login'
import { Route as DeferredImport } from './routes/deferred'
import { Route as PathlessLayoutImport } from './routes/_pathlessLayout'
import { Route as StoreRouteImport } from './routes/store/route'
import { Route as ProductRouteImport } from './routes/product/route'
import { Route as DashboardRouteImport } from './routes/dashboard/route'
import { Route as IndexImport } from './routes/index'
import { Route as StoreIndexImport } from './routes/store/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as BlogIndexImport } from './routes/blog/index'
import { Route as StoreCheckoutImport } from './routes/store/checkout'
import { Route as StoreProductIdImport } from './routes/store/$productId'
import { Route as DashboardProductsImport } from './routes/dashboard/products'
import { Route as DashboardOrdersImport } from './routes/dashboard/orders'
import { Route as DashboardCategoriesImport } from './routes/dashboard/categories'
import { Route as DashboardBrandsImport } from './routes/dashboard/brands'
import { Route as DashboardBlogImport } from './routes/dashboard/blog'
import { Route as DashboardAnalyticsImport } from './routes/dashboard/analytics'
import { Route as BlogSlugImport } from './routes/blog/$slug'
import { Route as PathlessLayoutNestedLayoutImport } from './routes/_pathlessLayout/_nested-layout'
import { Route as PathlessLayoutNestedLayoutRouteBImport } from './routes/_pathlessLayout/_nested-layout/route-b'
import { Route as PathlessLayoutNestedLayoutRouteAImport } from './routes/_pathlessLayout/_nested-layout/route-a'

// Create/Update Routes

const RedirectRoute = RedirectImport.update({
  id: '/redirect',
  path: '/redirect',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const DeferredRoute = DeferredImport.update({
  id: '/deferred',
  path: '/deferred',
  getParentRoute: () => rootRoute,
} as any)

const PathlessLayoutRoute = PathlessLayoutImport.update({
  id: '/_pathlessLayout',
  getParentRoute: () => rootRoute,
} as any)

const StoreRouteRoute = StoreRouteImport.update({
  id: '/store',
  path: '/store',
  getParentRoute: () => rootRoute,
} as any)

const ProductRouteRoute = ProductRouteImport.update({
  id: '/product',
  path: '/product',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRouteRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const StoreIndexRoute = StoreIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => StoreRouteRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const BlogIndexRoute = BlogIndexImport.update({
  id: '/blog/',
  path: '/blog/',
  getParentRoute: () => rootRoute,
} as any)

const StoreCheckoutRoute = StoreCheckoutImport.update({
  id: '/checkout',
  path: '/checkout',
  getParentRoute: () => StoreRouteRoute,
} as any)

const StoreProductIdRoute = StoreProductIdImport.update({
  id: '/$productId',
  path: '/$productId',
  getParentRoute: () => StoreRouteRoute,
} as any)

const DashboardProductsRoute = DashboardProductsImport.update({
  id: '/products',
  path: '/products',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardOrdersRoute = DashboardOrdersImport.update({
  id: '/orders',
  path: '/orders',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardCategoriesRoute = DashboardCategoriesImport.update({
  id: '/categories',
  path: '/categories',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardBrandsRoute = DashboardBrandsImport.update({
  id: '/brands',
  path: '/brands',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardBlogRoute = DashboardBlogImport.update({
  id: '/blog',
  path: '/blog',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardAnalyticsRoute = DashboardAnalyticsImport.update({
  id: '/analytics',
  path: '/analytics',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const BlogSlugRoute = BlogSlugImport.update({
  id: '/blog/$slug',
  path: '/blog/$slug',
  getParentRoute: () => rootRoute,
} as any)

const PathlessLayoutNestedLayoutRoute = PathlessLayoutNestedLayoutImport.update(
  {
    id: '/_nested-layout',
    getParentRoute: () => PathlessLayoutRoute,
  } as any,
)

const PathlessLayoutNestedLayoutRouteBRoute =
  PathlessLayoutNestedLayoutRouteBImport.update({
    id: '/route-b',
    path: '/route-b',
    getParentRoute: () => PathlessLayoutNestedLayoutRoute,
  } as any)

const PathlessLayoutNestedLayoutRouteARoute =
  PathlessLayoutNestedLayoutRouteAImport.update({
    id: '/route-a',
    path: '/route-a',
    getParentRoute: () => PathlessLayoutNestedLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRoute
    }
    '/product': {
      id: '/product'
      path: '/product'
      fullPath: '/product'
      preLoaderRoute: typeof ProductRouteImport
      parentRoute: typeof rootRoute
    }
    '/store': {
      id: '/store'
      path: '/store'
      fullPath: '/store'
      preLoaderRoute: typeof StoreRouteImport
      parentRoute: typeof rootRoute
    }
    '/_pathlessLayout': {
      id: '/_pathlessLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PathlessLayoutImport
      parentRoute: typeof rootRoute
    }
    '/deferred': {
      id: '/deferred'
      path: '/deferred'
      fullPath: '/deferred'
      preLoaderRoute: typeof DeferredImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/redirect': {
      id: '/redirect'
      path: '/redirect'
      fullPath: '/redirect'
      preLoaderRoute: typeof RedirectImport
      parentRoute: typeof rootRoute
    }
    '/_pathlessLayout/_nested-layout': {
      id: '/_pathlessLayout/_nested-layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PathlessLayoutNestedLayoutImport
      parentRoute: typeof PathlessLayoutImport
    }
    '/blog/$slug': {
      id: '/blog/$slug'
      path: '/blog/$slug'
      fullPath: '/blog/$slug'
      preLoaderRoute: typeof BlogSlugImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/analytics': {
      id: '/dashboard/analytics'
      path: '/analytics'
      fullPath: '/dashboard/analytics'
      preLoaderRoute: typeof DashboardAnalyticsImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/blog': {
      id: '/dashboard/blog'
      path: '/blog'
      fullPath: '/dashboard/blog'
      preLoaderRoute: typeof DashboardBlogImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/brands': {
      id: '/dashboard/brands'
      path: '/brands'
      fullPath: '/dashboard/brands'
      preLoaderRoute: typeof DashboardBrandsImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/categories': {
      id: '/dashboard/categories'
      path: '/categories'
      fullPath: '/dashboard/categories'
      preLoaderRoute: typeof DashboardCategoriesImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/orders': {
      id: '/dashboard/orders'
      path: '/orders'
      fullPath: '/dashboard/orders'
      preLoaderRoute: typeof DashboardOrdersImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/products': {
      id: '/dashboard/products'
      path: '/products'
      fullPath: '/dashboard/products'
      preLoaderRoute: typeof DashboardProductsImport
      parentRoute: typeof DashboardRouteImport
    }
    '/store/$productId': {
      id: '/store/$productId'
      path: '/$productId'
      fullPath: '/store/$productId'
      preLoaderRoute: typeof StoreProductIdImport
      parentRoute: typeof StoreRouteImport
    }
    '/store/checkout': {
      id: '/store/checkout'
      path: '/checkout'
      fullPath: '/store/checkout'
      preLoaderRoute: typeof StoreCheckoutImport
      parentRoute: typeof StoreRouteImport
    }
    '/blog/': {
      id: '/blog/'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/store/': {
      id: '/store/'
      path: '/'
      fullPath: '/store/'
      preLoaderRoute: typeof StoreIndexImport
      parentRoute: typeof StoreRouteImport
    }
    '/_pathlessLayout/_nested-layout/route-a': {
      id: '/_pathlessLayout/_nested-layout/route-a'
      path: '/route-a'
      fullPath: '/route-a'
      preLoaderRoute: typeof PathlessLayoutNestedLayoutRouteAImport
      parentRoute: typeof PathlessLayoutNestedLayoutImport
    }
    '/_pathlessLayout/_nested-layout/route-b': {
      id: '/_pathlessLayout/_nested-layout/route-b'
      path: '/route-b'
      fullPath: '/route-b'
      preLoaderRoute: typeof PathlessLayoutNestedLayoutRouteBImport
      parentRoute: typeof PathlessLayoutNestedLayoutImport
    }
  }
}

// Create and export the route tree

interface DashboardRouteRouteChildren {
  DashboardAnalyticsRoute: typeof DashboardAnalyticsRoute
  DashboardBlogRoute: typeof DashboardBlogRoute
  DashboardBrandsRoute: typeof DashboardBrandsRoute
  DashboardCategoriesRoute: typeof DashboardCategoriesRoute
  DashboardOrdersRoute: typeof DashboardOrdersRoute
  DashboardProductsRoute: typeof DashboardProductsRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardAnalyticsRoute: DashboardAnalyticsRoute,
  DashboardBlogRoute: DashboardBlogRoute,
  DashboardBrandsRoute: DashboardBrandsRoute,
  DashboardCategoriesRoute: DashboardCategoriesRoute,
  DashboardOrdersRoute: DashboardOrdersRoute,
  DashboardProductsRoute: DashboardProductsRoute,
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

interface StoreRouteRouteChildren {
  StoreProductIdRoute: typeof StoreProductIdRoute
  StoreCheckoutRoute: typeof StoreCheckoutRoute
  StoreIndexRoute: typeof StoreIndexRoute
}

const StoreRouteRouteChildren: StoreRouteRouteChildren = {
  StoreProductIdRoute: StoreProductIdRoute,
  StoreCheckoutRoute: StoreCheckoutRoute,
  StoreIndexRoute: StoreIndexRoute,
}

const StoreRouteRouteWithChildren = StoreRouteRoute._addFileChildren(
  StoreRouteRouteChildren,
)

interface PathlessLayoutNestedLayoutRouteChildren {
  PathlessLayoutNestedLayoutRouteARoute: typeof PathlessLayoutNestedLayoutRouteARoute
  PathlessLayoutNestedLayoutRouteBRoute: typeof PathlessLayoutNestedLayoutRouteBRoute
}

const PathlessLayoutNestedLayoutRouteChildren: PathlessLayoutNestedLayoutRouteChildren =
  {
    PathlessLayoutNestedLayoutRouteARoute:
      PathlessLayoutNestedLayoutRouteARoute,
    PathlessLayoutNestedLayoutRouteBRoute:
      PathlessLayoutNestedLayoutRouteBRoute,
  }

const PathlessLayoutNestedLayoutRouteWithChildren =
  PathlessLayoutNestedLayoutRoute._addFileChildren(
    PathlessLayoutNestedLayoutRouteChildren,
  )

interface PathlessLayoutRouteChildren {
  PathlessLayoutNestedLayoutRoute: typeof PathlessLayoutNestedLayoutRouteWithChildren
}

const PathlessLayoutRouteChildren: PathlessLayoutRouteChildren = {
  PathlessLayoutNestedLayoutRoute: PathlessLayoutNestedLayoutRouteWithChildren,
}

const PathlessLayoutRouteWithChildren = PathlessLayoutRoute._addFileChildren(
  PathlessLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/product': typeof ProductRouteRoute
  '/store': typeof StoreRouteRouteWithChildren
  '': typeof PathlessLayoutNestedLayoutRouteWithChildren
  '/deferred': typeof DeferredRoute
  '/login': typeof LoginRoute
  '/redirect': typeof RedirectRoute
  '/blog/$slug': typeof BlogSlugRoute
  '/dashboard/analytics': typeof DashboardAnalyticsRoute
  '/dashboard/blog': typeof DashboardBlogRoute
  '/dashboard/brands': typeof DashboardBrandsRoute
  '/dashboard/categories': typeof DashboardCategoriesRoute
  '/dashboard/orders': typeof DashboardOrdersRoute
  '/dashboard/products': typeof DashboardProductsRoute
  '/store/$productId': typeof StoreProductIdRoute
  '/store/checkout': typeof StoreCheckoutRoute
  '/blog': typeof BlogIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/store/': typeof StoreIndexRoute
  '/route-a': typeof PathlessLayoutNestedLayoutRouteARoute
  '/route-b': typeof PathlessLayoutNestedLayoutRouteBRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/product': typeof ProductRouteRoute
  '': typeof PathlessLayoutNestedLayoutRouteWithChildren
  '/deferred': typeof DeferredRoute
  '/login': typeof LoginRoute
  '/redirect': typeof RedirectRoute
  '/blog/$slug': typeof BlogSlugRoute
  '/dashboard/analytics': typeof DashboardAnalyticsRoute
  '/dashboard/blog': typeof DashboardBlogRoute
  '/dashboard/brands': typeof DashboardBrandsRoute
  '/dashboard/categories': typeof DashboardCategoriesRoute
  '/dashboard/orders': typeof DashboardOrdersRoute
  '/dashboard/products': typeof DashboardProductsRoute
  '/store/$productId': typeof StoreProductIdRoute
  '/store/checkout': typeof StoreCheckoutRoute
  '/blog': typeof BlogIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/store': typeof StoreIndexRoute
  '/route-a': typeof PathlessLayoutNestedLayoutRouteARoute
  '/route-b': typeof PathlessLayoutNestedLayoutRouteBRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/product': typeof ProductRouteRoute
  '/store': typeof StoreRouteRouteWithChildren
  '/_pathlessLayout': typeof PathlessLayoutRouteWithChildren
  '/deferred': typeof DeferredRoute
  '/login': typeof LoginRoute
  '/redirect': typeof RedirectRoute
  '/_pathlessLayout/_nested-layout': typeof PathlessLayoutNestedLayoutRouteWithChildren
  '/blog/$slug': typeof BlogSlugRoute
  '/dashboard/analytics': typeof DashboardAnalyticsRoute
  '/dashboard/blog': typeof DashboardBlogRoute
  '/dashboard/brands': typeof DashboardBrandsRoute
  '/dashboard/categories': typeof DashboardCategoriesRoute
  '/dashboard/orders': typeof DashboardOrdersRoute
  '/dashboard/products': typeof DashboardProductsRoute
  '/store/$productId': typeof StoreProductIdRoute
  '/store/checkout': typeof StoreCheckoutRoute
  '/blog/': typeof BlogIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/store/': typeof StoreIndexRoute
  '/_pathlessLayout/_nested-layout/route-a': typeof PathlessLayoutNestedLayoutRouteARoute
  '/_pathlessLayout/_nested-layout/route-b': typeof PathlessLayoutNestedLayoutRouteBRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/product'
    | '/store'
    | ''
    | '/deferred'
    | '/login'
    | '/redirect'
    | '/blog/$slug'
    | '/dashboard/analytics'
    | '/dashboard/blog'
    | '/dashboard/brands'
    | '/dashboard/categories'
    | '/dashboard/orders'
    | '/dashboard/products'
    | '/store/$productId'
    | '/store/checkout'
    | '/blog'
    | '/dashboard/'
    | '/store/'
    | '/route-a'
    | '/route-b'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/product'
    | ''
    | '/deferred'
    | '/login'
    | '/redirect'
    | '/blog/$slug'
    | '/dashboard/analytics'
    | '/dashboard/blog'
    | '/dashboard/brands'
    | '/dashboard/categories'
    | '/dashboard/orders'
    | '/dashboard/products'
    | '/store/$productId'
    | '/store/checkout'
    | '/blog'
    | '/dashboard'
    | '/store'
    | '/route-a'
    | '/route-b'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/product'
    | '/store'
    | '/_pathlessLayout'
    | '/deferred'
    | '/login'
    | '/redirect'
    | '/_pathlessLayout/_nested-layout'
    | '/blog/$slug'
    | '/dashboard/analytics'
    | '/dashboard/blog'
    | '/dashboard/brands'
    | '/dashboard/categories'
    | '/dashboard/orders'
    | '/dashboard/products'
    | '/store/$productId'
    | '/store/checkout'
    | '/blog/'
    | '/dashboard/'
    | '/store/'
    | '/_pathlessLayout/_nested-layout/route-a'
    | '/_pathlessLayout/_nested-layout/route-b'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  ProductRouteRoute: typeof ProductRouteRoute
  StoreRouteRoute: typeof StoreRouteRouteWithChildren
  PathlessLayoutRoute: typeof PathlessLayoutRouteWithChildren
  DeferredRoute: typeof DeferredRoute
  LoginRoute: typeof LoginRoute
  RedirectRoute: typeof RedirectRoute
  BlogSlugRoute: typeof BlogSlugRoute
  BlogIndexRoute: typeof BlogIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  ProductRouteRoute: ProductRouteRoute,
  StoreRouteRoute: StoreRouteRouteWithChildren,
  PathlessLayoutRoute: PathlessLayoutRouteWithChildren,
  DeferredRoute: DeferredRoute,
  LoginRoute: LoginRoute,
  RedirectRoute: RedirectRoute,
  BlogSlugRoute: BlogSlugRoute,
  BlogIndexRoute: BlogIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/product",
        "/store",
        "/_pathlessLayout",
        "/deferred",
        "/login",
        "/redirect",
        "/blog/$slug",
        "/blog/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard/route.tsx",
      "children": [
        "/dashboard/analytics",
        "/dashboard/blog",
        "/dashboard/brands",
        "/dashboard/categories",
        "/dashboard/orders",
        "/dashboard/products",
        "/dashboard/"
      ]
    },
    "/product": {
      "filePath": "product/route.tsx"
    },
    "/store": {
      "filePath": "store/route.tsx",
      "children": [
        "/store/$productId",
        "/store/checkout",
        "/store/"
      ]
    },
    "/_pathlessLayout": {
      "filePath": "_pathlessLayout.tsx",
      "children": [
        "/_pathlessLayout/_nested-layout"
      ]
    },
    "/deferred": {
      "filePath": "deferred.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/redirect": {
      "filePath": "redirect.tsx"
    },
    "/_pathlessLayout/_nested-layout": {
      "filePath": "_pathlessLayout/_nested-layout.tsx",
      "parent": "/_pathlessLayout",
      "children": [
        "/_pathlessLayout/_nested-layout/route-a",
        "/_pathlessLayout/_nested-layout/route-b"
      ]
    },
    "/blog/$slug": {
      "filePath": "blog/$slug.tsx"
    },
    "/dashboard/analytics": {
      "filePath": "dashboard/analytics.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/blog": {
      "filePath": "dashboard/blog.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/brands": {
      "filePath": "dashboard/brands.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/categories": {
      "filePath": "dashboard/categories.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/orders": {
      "filePath": "dashboard/orders.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/products": {
      "filePath": "dashboard/products.tsx",
      "parent": "/dashboard"
    },
    "/store/$productId": {
      "filePath": "store/$productId.tsx",
      "parent": "/store"
    },
    "/store/checkout": {
      "filePath": "store/checkout.tsx",
      "parent": "/store"
    },
    "/blog/": {
      "filePath": "blog/index.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx",
      "parent": "/dashboard"
    },
    "/store/": {
      "filePath": "store/index.tsx",
      "parent": "/store"
    },
    "/_pathlessLayout/_nested-layout/route-a": {
      "filePath": "_pathlessLayout/_nested-layout/route-a.tsx",
      "parent": "/_pathlessLayout/_nested-layout"
    },
    "/_pathlessLayout/_nested-layout/route-b": {
      "filePath": "_pathlessLayout/_nested-layout/route-b.tsx",
      "parent": "/_pathlessLayout/_nested-layout"
    }
  }
}
ROUTE_MANIFEST_END */
