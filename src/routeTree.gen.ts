/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RedirectRouteImport } from './routes/redirect'
import { Route as LoginRouteImport } from './routes/login'
import { Route as StoreRouteRouteImport } from './routes/store/route'
import { Route as ProductRouteRouteImport } from './routes/product/route'
import { Route as DashboardRouteRouteImport } from './routes/dashboard/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as WebIndexRouteImport } from './routes/web/index'
import { Route as StoreIndexRouteImport } from './routes/store/index'
import { Route as PhotosIndexRouteImport } from './routes/photos/index'
import { Route as DesignIndexRouteImport } from './routes/design/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as BlogIndexRouteImport } from './routes/blog/index'
import { Route as StoreCheckoutRouteImport } from './routes/store/checkout'
import { Route as StoreProductIdRouteImport } from './routes/store/$productId'
import { Route as OrderOrderIdRouteImport } from './routes/order/$orderId'
import { Route as DashboardProductsRouteImport } from './routes/dashboard/products'
import { Route as DashboardOrdersRouteImport } from './routes/dashboard/orders'
import { Route as DashboardCategoriesRouteImport } from './routes/dashboard/categories'
import { Route as DashboardBrandsRouteImport } from './routes/dashboard/brands'
import { Route as DashboardBlogRouteImport } from './routes/dashboard/blog'
import { Route as DashboardAnalyticsRouteImport } from './routes/dashboard/analytics'
import { Route as BlogSlugRouteImport } from './routes/blog/$slug'
import { Route as ApiAuthSplatRouteImport } from './routes/api.auth.$'

const RedirectRoute = RedirectRouteImport.update({
  id: '/redirect',
  path: '/redirect',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const StoreRouteRoute = StoreRouteRouteImport.update({
  id: '/store',
  path: '/store',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductRouteRoute = ProductRouteRouteImport.update({
  id: '/product',
  path: '/product',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const WebIndexRoute = WebIndexRouteImport.update({
  id: '/web/',
  path: '/web/',
  getParentRoute: () => rootRouteImport,
} as any)
const StoreIndexRoute = StoreIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => StoreRouteRoute,
} as any)
const PhotosIndexRoute = PhotosIndexRouteImport.update({
  id: '/photos/',
  path: '/photos/',
  getParentRoute: () => rootRouteImport,
} as any)
const DesignIndexRoute = DesignIndexRouteImport.update({
  id: '/design/',
  path: '/design/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const BlogIndexRoute = BlogIndexRouteImport.update({
  id: '/blog/',
  path: '/blog/',
  getParentRoute: () => rootRouteImport,
} as any)
const StoreCheckoutRoute = StoreCheckoutRouteImport.update({
  id: '/checkout',
  path: '/checkout',
  getParentRoute: () => StoreRouteRoute,
} as any)
const StoreProductIdRoute = StoreProductIdRouteImport.update({
  id: '/$productId',
  path: '/$productId',
  getParentRoute: () => StoreRouteRoute,
} as any)
const OrderOrderIdRoute = OrderOrderIdRouteImport.update({
  id: '/order/$orderId',
  path: '/order/$orderId',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardProductsRoute = DashboardProductsRouteImport.update({
  id: '/products',
  path: '/products',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardOrdersRoute = DashboardOrdersRouteImport.update({
  id: '/orders',
  path: '/orders',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardCategoriesRoute = DashboardCategoriesRouteImport.update({
  id: '/categories',
  path: '/categories',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardBrandsRoute = DashboardBrandsRouteImport.update({
  id: '/brands',
  path: '/brands',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardBlogRoute = DashboardBlogRouteImport.update({
  id: '/blog',
  path: '/blog',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardAnalyticsRoute = DashboardAnalyticsRouteImport.update({
  id: '/analytics',
  path: '/analytics',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const BlogSlugRoute = BlogSlugRouteImport.update({
  id: '/blog/$slug',
  path: '/blog/$slug',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiAuthSplatRoute = ApiAuthSplatRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/product': typeof ProductRouteRoute
  '/store': typeof StoreRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/redirect': typeof RedirectRoute
  '/blog/$slug': typeof BlogSlugRoute
  '/dashboard/analytics': typeof DashboardAnalyticsRoute
  '/dashboard/blog': typeof DashboardBlogRoute
  '/dashboard/brands': typeof DashboardBrandsRoute
  '/dashboard/categories': typeof DashboardCategoriesRoute
  '/dashboard/orders': typeof DashboardOrdersRoute
  '/dashboard/products': typeof DashboardProductsRoute
  '/order/$orderId': typeof OrderOrderIdRoute
  '/store/$productId': typeof StoreProductIdRoute
  '/store/checkout': typeof StoreCheckoutRoute
  '/blog': typeof BlogIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/design': typeof DesignIndexRoute
  '/photos': typeof PhotosIndexRoute
  '/store/': typeof StoreIndexRoute
  '/web': typeof WebIndexRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/product': typeof ProductRouteRoute
  '/login': typeof LoginRoute
  '/redirect': typeof RedirectRoute
  '/blog/$slug': typeof BlogSlugRoute
  '/dashboard/analytics': typeof DashboardAnalyticsRoute
  '/dashboard/blog': typeof DashboardBlogRoute
  '/dashboard/brands': typeof DashboardBrandsRoute
  '/dashboard/categories': typeof DashboardCategoriesRoute
  '/dashboard/orders': typeof DashboardOrdersRoute
  '/dashboard/products': typeof DashboardProductsRoute
  '/order/$orderId': typeof OrderOrderIdRoute
  '/store/$productId': typeof StoreProductIdRoute
  '/store/checkout': typeof StoreCheckoutRoute
  '/blog': typeof BlogIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/design': typeof DesignIndexRoute
  '/photos': typeof PhotosIndexRoute
  '/store': typeof StoreIndexRoute
  '/web': typeof WebIndexRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/product': typeof ProductRouteRoute
  '/store': typeof StoreRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/redirect': typeof RedirectRoute
  '/blog/$slug': typeof BlogSlugRoute
  '/dashboard/analytics': typeof DashboardAnalyticsRoute
  '/dashboard/blog': typeof DashboardBlogRoute
  '/dashboard/brands': typeof DashboardBrandsRoute
  '/dashboard/categories': typeof DashboardCategoriesRoute
  '/dashboard/orders': typeof DashboardOrdersRoute
  '/dashboard/products': typeof DashboardProductsRoute
  '/order/$orderId': typeof OrderOrderIdRoute
  '/store/$productId': typeof StoreProductIdRoute
  '/store/checkout': typeof StoreCheckoutRoute
  '/blog/': typeof BlogIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/design/': typeof DesignIndexRoute
  '/photos/': typeof PhotosIndexRoute
  '/store/': typeof StoreIndexRoute
  '/web/': typeof WebIndexRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/product'
    | '/store'
    | '/login'
    | '/redirect'
    | '/blog/$slug'
    | '/dashboard/analytics'
    | '/dashboard/blog'
    | '/dashboard/brands'
    | '/dashboard/categories'
    | '/dashboard/orders'
    | '/dashboard/products'
    | '/order/$orderId'
    | '/store/$productId'
    | '/store/checkout'
    | '/blog'
    | '/dashboard/'
    | '/design'
    | '/photos'
    | '/store/'
    | '/web'
    | '/api/auth/$'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/product'
    | '/login'
    | '/redirect'
    | '/blog/$slug'
    | '/dashboard/analytics'
    | '/dashboard/blog'
    | '/dashboard/brands'
    | '/dashboard/categories'
    | '/dashboard/orders'
    | '/dashboard/products'
    | '/order/$orderId'
    | '/store/$productId'
    | '/store/checkout'
    | '/blog'
    | '/dashboard'
    | '/design'
    | '/photos'
    | '/store'
    | '/web'
    | '/api/auth/$'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/product'
    | '/store'
    | '/login'
    | '/redirect'
    | '/blog/$slug'
    | '/dashboard/analytics'
    | '/dashboard/blog'
    | '/dashboard/brands'
    | '/dashboard/categories'
    | '/dashboard/orders'
    | '/dashboard/products'
    | '/order/$orderId'
    | '/store/$productId'
    | '/store/checkout'
    | '/blog/'
    | '/dashboard/'
    | '/design/'
    | '/photos/'
    | '/store/'
    | '/web/'
    | '/api/auth/$'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  ProductRouteRoute: typeof ProductRouteRoute
  StoreRouteRoute: typeof StoreRouteRouteWithChildren
  LoginRoute: typeof LoginRoute
  RedirectRoute: typeof RedirectRoute
  BlogSlugRoute: typeof BlogSlugRoute
  OrderOrderIdRoute: typeof OrderOrderIdRoute
  BlogIndexRoute: typeof BlogIndexRoute
  DesignIndexRoute: typeof DesignIndexRoute
  PhotosIndexRoute: typeof PhotosIndexRoute
  WebIndexRoute: typeof WebIndexRoute
  ApiAuthSplatRoute: typeof ApiAuthSplatRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/redirect': {
      id: '/redirect'
      path: '/redirect'
      fullPath: '/redirect'
      preLoaderRoute: typeof RedirectRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/store': {
      id: '/store'
      path: '/store'
      fullPath: '/store'
      preLoaderRoute: typeof StoreRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/product': {
      id: '/product'
      path: '/product'
      fullPath: '/product'
      preLoaderRoute: typeof ProductRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/web/': {
      id: '/web/'
      path: '/web'
      fullPath: '/web'
      preLoaderRoute: typeof WebIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/store/': {
      id: '/store/'
      path: '/'
      fullPath: '/store/'
      preLoaderRoute: typeof StoreIndexRouteImport
      parentRoute: typeof StoreRouteRoute
    }
    '/photos/': {
      id: '/photos/'
      path: '/photos'
      fullPath: '/photos'
      preLoaderRoute: typeof PhotosIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/design/': {
      id: '/design/'
      path: '/design'
      fullPath: '/design'
      preLoaderRoute: typeof DesignIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/blog/': {
      id: '/blog/'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/store/checkout': {
      id: '/store/checkout'
      path: '/checkout'
      fullPath: '/store/checkout'
      preLoaderRoute: typeof StoreCheckoutRouteImport
      parentRoute: typeof StoreRouteRoute
    }
    '/store/$productId': {
      id: '/store/$productId'
      path: '/$productId'
      fullPath: '/store/$productId'
      preLoaderRoute: typeof StoreProductIdRouteImport
      parentRoute: typeof StoreRouteRoute
    }
    '/order/$orderId': {
      id: '/order/$orderId'
      path: '/order/$orderId'
      fullPath: '/order/$orderId'
      preLoaderRoute: typeof OrderOrderIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/products': {
      id: '/dashboard/products'
      path: '/products'
      fullPath: '/dashboard/products'
      preLoaderRoute: typeof DashboardProductsRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/orders': {
      id: '/dashboard/orders'
      path: '/orders'
      fullPath: '/dashboard/orders'
      preLoaderRoute: typeof DashboardOrdersRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/categories': {
      id: '/dashboard/categories'
      path: '/categories'
      fullPath: '/dashboard/categories'
      preLoaderRoute: typeof DashboardCategoriesRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/brands': {
      id: '/dashboard/brands'
      path: '/brands'
      fullPath: '/dashboard/brands'
      preLoaderRoute: typeof DashboardBrandsRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/blog': {
      id: '/dashboard/blog'
      path: '/blog'
      fullPath: '/dashboard/blog'
      preLoaderRoute: typeof DashboardBlogRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/analytics': {
      id: '/dashboard/analytics'
      path: '/analytics'
      fullPath: '/dashboard/analytics'
      preLoaderRoute: typeof DashboardAnalyticsRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/blog/$slug': {
      id: '/blog/$slug'
      path: '/blog/$slug'
      fullPath: '/blog/$slug'
      preLoaderRoute: typeof BlogSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface DashboardRouteRouteChildren {
  DashboardAnalyticsRoute: typeof DashboardAnalyticsRoute
  DashboardBlogRoute: typeof DashboardBlogRoute
  DashboardBrandsRoute: typeof DashboardBrandsRoute
  DashboardCategoriesRoute: typeof DashboardCategoriesRoute
  DashboardOrdersRoute: typeof DashboardOrdersRoute
  DashboardProductsRoute: typeof DashboardProductsRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardAnalyticsRoute: DashboardAnalyticsRoute,
  DashboardBlogRoute: DashboardBlogRoute,
  DashboardBrandsRoute: DashboardBrandsRoute,
  DashboardCategoriesRoute: DashboardCategoriesRoute,
  DashboardOrdersRoute: DashboardOrdersRoute,
  DashboardProductsRoute: DashboardProductsRoute,
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

interface StoreRouteRouteChildren {
  StoreProductIdRoute: typeof StoreProductIdRoute
  StoreCheckoutRoute: typeof StoreCheckoutRoute
  StoreIndexRoute: typeof StoreIndexRoute
}

const StoreRouteRouteChildren: StoreRouteRouteChildren = {
  StoreProductIdRoute: StoreProductIdRoute,
  StoreCheckoutRoute: StoreCheckoutRoute,
  StoreIndexRoute: StoreIndexRoute,
}

const StoreRouteRouteWithChildren = StoreRouteRoute._addFileChildren(
  StoreRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  ProductRouteRoute: ProductRouteRoute,
  StoreRouteRoute: StoreRouteRouteWithChildren,
  LoginRoute: LoginRoute,
  RedirectRoute: RedirectRoute,
  BlogSlugRoute: BlogSlugRoute,
  OrderOrderIdRoute: OrderOrderIdRoute,
  BlogIndexRoute: BlogIndexRoute,
  DesignIndexRoute: DesignIndexRoute,
  PhotosIndexRoute: PhotosIndexRoute,
  WebIndexRoute: WebIndexRoute,
  ApiAuthSplatRoute: ApiAuthSplatRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
